server {
  listen 4444;
  resolver 192.168.2.1;
  location /set {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.set(ngx.var.arg_key, ngx.var.arg_value)))
    }
  }
  location /set_perf {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.set_perf(ngx.var.arg_key, ngx.var.arg_value)))
    }
  }
  location /get_perf {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.get_perf(ngx.var.arg_key)))
    }
  }
  location /set2 {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.set2(ngx.var.arg_key, ngx.var.arg_value)))
    }
  }
  location /replace {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.replace(ngx.var.arg_key, ngx.var.arg_value)))
    }
  }
  location /touch {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.touch(ngx.var.arg_key, ngx.var.arg_expire)))
    }
  }
  location /get {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.get(ngx.var.arg_key)))
    }
  }
  location /get2 {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.get2(ngx.var.arg_key)))
    }
  }
  location /delete {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.delete(ngx.var.arg_key)))
    }
  }
  location /gat {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.gat(ngx.var.arg_key)))
    }
  }
  location /stat {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.stat(ngx.var.arg_key)))
    }
  }
  location /version {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.version()))
    }
  }
  location /verbosity {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.verbosity(ngx.var.arg_level)))
    }
  }
  location /incr {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.incr(ngx.var.arg_key)))
    }
  }
  location /decr {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.decr(ngx.var.arg_key)))
    }
  }
  location /sasl_list {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.sasl_list()))
    }
  }
  location /list_buckets {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.list_buckets()))
    }
  }
  location /noop {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.noop()))
    }
  }
  location /flush {
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      ngx.say(cjson.encode(cb.flush()))
    }
  }
  location /batch {
    lua_need_request_body on;
    content_by_lua_block {
      local cb = require "cb"
      local cjson = require "cjson"
      local body = cjson.decode(ngx.req.get_body_data())
      cb.batch(body)
      ngx.say(cjson.encode(body))
    }
  }
  location /batch_gen {
    content_by_lua_block {
      local cb = require "cb"
      ngx.say(cb.batch_gen(ngx.var.arg_n))
    }
  }
  location /batch_genQ {
    content_by_lua_block {
      local cb = require "cb"
      ngx.say(cb.batch_genQ(ngx.var.arg_s, ngx.var.arg_n))
    }
  }
}